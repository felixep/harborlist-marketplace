# HarborList Local Development Environment
# Single Docker Compose file with profiles for basic and enhanced setups
# Usage: docker-compose --profile basic up  OR  docker-compose --profile enhanced up

# HarborList Local Development Environment
# Usage:
#   Basic:    docker-compose up
#   Enhanced: docker-compose --profile enhanced up
#   Full:     docker-compose --profile enhanced --profile monitoring up

services:
  # Traefik Reverse Proxy (Enhanced profile only)
  traefik:
    image: traefik:v3.0
    profiles: ["enhanced"]
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--providers.file.watch=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--accesslog=true"
      - "--log.level=INFO"
      - "--serversTransport.insecureSkipVerify=true"
    ports:
      - "80:80"
      - "443:443"
      - "8088:8080"  # Traefik dashboard (moved to avoid conflicts)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik-config:/etc/traefik/dynamic:ro
      - ./certs/local:/etc/ssl/certs:ro
    networks:
      - harborlist-local
    labels:
      - "traefik.enable=true"
      # HTTP to HTTPS redirect  
      - "traefik.http.routers.dashboard-http.rule=Host(`traefik.local.harborlist.com`)"
      - "traefik.http.routers.dashboard-http.entrypoints=web"
      - "traefik.http.routers.dashboard-http.middlewares=https-redirect@file"
      # HTTPS router
      - "traefik.http.routers.dashboard-https.rule=Host(`traefik.local.harborlist.com`)"
      - "traefik.http.routers.dashboard-https.entrypoints=websecure"
      - "traefik.http.routers.dashboard-https.tls=true"
      - "traefik.http.routers.dashboard-https.service=api@internal"

  # Frontend development server
  frontend:
    profiles: ["basic", "enhanced"]
    build:
      context: .
      dockerfile: ./frontend/Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - .:/workspace
      - /workspace/node_modules
      - /workspace/frontend/node_modules
      - /workspace/packages/shared-types/node_modules
    environment:
      - VITE_API_URL=https://local-api.harborlist.com/api
      - VITE_ENVIRONMENT=local
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    networks:
      - harborlist-local
    labels:
      - "traefik.enable=true"
      # HTTP to HTTPS redirect
      - "traefik.http.routers.frontend-http.rule=Host(`local.harborlist.com`)"
      - "traefik.http.routers.frontend-http.entrypoints=web"
      - "traefik.http.routers.frontend-http.middlewares=https-redirect@file"
      # HTTPS router
      - "traefik.http.routers.frontend-https.rule=Host(`local.harborlist.com`)"
      - "traefik.http.routers.frontend-https.entrypoints=websecure"
      - "traefik.http.routers.frontend-https.tls=true"
      - "traefik.http.routers.frontend-https.service=frontend"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
      - "traefik.http.services.frontend.loadbalancer.server.scheme=http"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"

  # Backend API server (Express wrapper for Lambda functions)
  backend:
    profiles: ["basic", "enhanced"]
    build:
      context: .
      dockerfile: ./backend/Dockerfile.dev
    ports:
      - "3001:3001"
    volumes:
      - .:/workspace
      - /workspace/node_modules
      - /workspace/backend/node_modules
      - /workspace/packages/shared-types/node_modules
    environment:
      - NODE_ENV=development
      - ENVIRONMENT=local
      - DEPLOYMENT_TARGET=docker
      - DYNAMODB_ENDPOINT=http://dynamodb-local:8000
      - S3_ENDPOINT=http://localstack:4566
      - SES_ENDPOINT=http://localstack:4566
      - JWT_SECRET=local-dev-secret-harborlist-2025
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_REGION=us-east-1
      - CORS_ORIGINS=https://local.harborlist.com,http://localhost:3000
      - API_BASE_URL=https://local-api.harborlist.com
      - FRONTEND_URL=https://local.harborlist.com
      - LISTINGS_TABLE=harborlist-listings
      - USERS_TABLE=boat-users
      - REVIEWS_TABLE=boat-reviews
      - SESSIONS_TABLE=boat-sessions
      - LOGIN_ATTEMPTS_TABLE=boat-login-attempts
      - AUDIT_LOGS_TABLE=boat-audit-logs
    depends_on:
      - dynamodb-local
      - localstack
    networks:
      - harborlist-local
    labels:
      - "traefik.enable=true"
      # HTTP to HTTPS redirect
      - "traefik.http.routers.backend-http.rule=Host(`local-api.harborlist.com`)"
      - "traefik.http.routers.backend-http.entrypoints=web"
      - "traefik.http.routers.backend-http.middlewares=https-redirect@file"
      # HTTPS router
      - "traefik.http.routers.backend-https.rule=Host(`local-api.harborlist.com`)"
      - "traefik.http.routers.backend-https.entrypoints=websecure"
      - "traefik.http.routers.backend-https.tls=true"
      - "traefik.http.routers.backend-https.service=backend"
      - "traefik.http.services.backend.loadbalancer.server.port=3001"
      - "traefik.http.services.backend.loadbalancer.server.scheme=http"

  # Local DynamoDB
  dynamodb-local:
    profiles: ["basic", "enhanced"]
    image: amazon/dynamodb-local:latest
    ports:
      - "8000:8000"
    command: ["-jar", "DynamoDBLocal.jar", "-inMemory", "-sharedDb"]
    networks:
      - harborlist-local

  # LocalStack for S3, SES, CloudWatch etc.
  localstack:
    profiles: ["basic", "enhanced"]
    image: localstack/localstack:3.0
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
    environment:
      - SERVICES=s3,ses,cloudwatch,logs
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - LAMBDA_EXECUTOR=local
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOST_TMP_FOLDER=/tmp/localstack
    volumes:
      - localstack_data:/tmp/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - harborlist-local

  # DynamoDB Admin UI
  dynamodb-admin:
    profiles: ["basic", "enhanced"]
    image: aaronshaf/dynamodb-admin:latest
    ports:
      - "8001:8001"
    environment:
      - DYNAMO_ENDPOINT=http://dynamodb-local:8000
      - AWS_REGION=us-east-1
    depends_on:
      - dynamodb-local
    networks:
      - harborlist-local

  # Redis for caching (optional but useful for development)
  redis:
    profiles: ["basic", "enhanced"]
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - harborlist-local

networks:
  harborlist-local:
    driver: bridge

volumes:
  dynamodb_data:
    driver: local
  localstack_data:
    driver: local
  redis_data:
    driver: local
  traefik_certs:
    driver: local