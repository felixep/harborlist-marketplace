#!/bin/bash

# Update Cognito Configuration Script
# This script updates .env and .env.local files with Cognito Pool IDs
# Use this when you need to update the configuration after creating new pools

set -e

echo "🔧 Cognito Configuration Updater"
echo "================================"
echo ""

# Check if running from project root
if [[ ! -f "package.json" ]]; then
    echo "❌ Error: This script must be run from the project root directory"
    exit 1
fi

# Function to prompt for value
prompt_for_value() {
    local var_name=$1
    local current_value=$2
    local prompt_text=$3
    
    if [[ -n "$current_value" ]]; then
        echo "$prompt_text"
        echo "Current value: $current_value"
        read -p "Press Enter to keep current value, or enter new value: " new_value
        if [[ -z "$new_value" ]]; then
            echo "$current_value"
        else
            echo "$new_value"
        fi
    else
        read -p "$prompt_text: " new_value
        echo "$new_value"
    fi
}

# Load current values from .env.local if it exists
if [[ -f ".env.local" ]]; then
    echo "📄 Loading current configuration from .env.local..."
    CURRENT_CUSTOMER_POOL_ID=$(grep "^CUSTOMER_USER_POOL_ID=" .env.local 2>/dev/null | cut -d'=' -f2 || echo "")
    CURRENT_CUSTOMER_CLIENT_ID=$(grep "^CUSTOMER_USER_POOL_CLIENT_ID=" .env.local 2>/dev/null | cut -d'=' -f2 || echo "")
    CURRENT_STAFF_POOL_ID=$(grep "^STAFF_USER_POOL_ID=" .env.local 2>/dev/null | cut -d'=' -f2 || echo "")
    CURRENT_STAFF_CLIENT_ID=$(grep "^STAFF_USER_POOL_CLIENT_ID=" .env.local 2>/dev/null | cut -d'=' -f2 || echo "")
    CURRENT_LOCALSTACK_TOKEN=$(grep "^LOCALSTACK_AUTH_TOKEN=" .env.local 2>/dev/null | cut -d'=' -f2 || echo "")
    echo ""
else
    echo "⚠️  No .env.local file found. Will create new configuration."
    echo ""
fi

# Prompt for new values
echo "Enter new Cognito Pool configuration:"
echo ""

CUSTOMER_POOL_ID=$(prompt_for_value "CUSTOMER_USER_POOL_ID" "$CURRENT_CUSTOMER_POOL_ID" "Customer Pool ID")
CUSTOMER_CLIENT_ID=$(prompt_for_value "CUSTOMER_USER_POOL_CLIENT_ID" "$CURRENT_CUSTOMER_CLIENT_ID" "Customer Client ID")
STAFF_POOL_ID=$(prompt_for_value "STAFF_USER_POOL_ID" "$CURRENT_STAFF_POOL_ID" "Staff Pool ID")
STAFF_CLIENT_ID=$(prompt_for_value "STAFF_USER_POOL_CLIENT_ID" "$CURRENT_STAFF_CLIENT_ID" "Staff Client ID")
LOCALSTACK_TOKEN=$(prompt_for_value "LOCALSTACK_AUTH_TOKEN" "$CURRENT_LOCALSTACK_TOKEN" "LocalStack Auth Token (optional)")

# Validate inputs
if [[ -z "$CUSTOMER_POOL_ID" ]] || [[ -z "$CUSTOMER_CLIENT_ID" ]] || [[ -z "$STAFF_POOL_ID" ]] || [[ -z "$STAFF_CLIENT_ID" ]]; then
    echo ""
    echo "❌ Error: All Pool IDs and Client IDs are required"
    exit 1
fi

echo ""
echo "📝 Writing configuration to .env.local..."

# Create .env.local file
cat > .env.local << EOF
# LocalStack Cognito Configuration
# Generated by update-cognito-config.sh on $(date)

# Customer User Pool
CUSTOMER_USER_POOL_ID=$CUSTOMER_POOL_ID
CUSTOMER_USER_POOL_CLIENT_ID=$CUSTOMER_CLIENT_ID

# Staff User Pool
STAFF_USER_POOL_ID=$STAFF_POOL_ID
STAFF_USER_POOL_CLIENT_ID=$STAFF_CLIENT_ID

# LocalStack Configuration
AWS_REGION=us-east-1
COGNITO_ENDPOINT=http://localhost:4566
IS_LOCALSTACK=true

# LocalStack Pro Auth Token
LOCALSTACK_AUTH_TOKEN=${LOCALSTACK_TOKEN:-ls-HAHAramA-sEzO-tONU-haga-23798675d3f3}

# AWS Test Credentials for LocalStack
AWS_ACCESS_KEY_ID=test
AWS_SECRET_ACCESS_KEY=test

# Development Settings
NODE_ENV=development
LOG_LEVEL=debug
EOF

echo "✅ .env.local updated successfully"

# Update .env file as well
echo "📝 Writing configuration to .env..."

cat > .env << EOF
# LocalStack Pro Configuration
# Generated by update-cognito-config.sh on $(date)
LOCALSTACK_AUTH_TOKEN=${LOCALSTACK_TOKEN:-ls-HAHAramA-sEzO-tONU-haga-23798675d3f3}

# AWS Configuration for LocalStack
AWS_ACCESS_KEY_ID=test
AWS_SECRET_ACCESS_KEY=test
AWS_DEFAULT_REGION=us-east-1

# Development Settings
NODE_ENV=development
LOG_LEVEL=debug

# Customer User Pool
CUSTOMER_USER_POOL_ID=$CUSTOMER_POOL_ID
CUSTOMER_USER_POOL_CLIENT_ID=$CUSTOMER_CLIENT_ID

# Staff User Pool
STAFF_USER_POOL_ID=$STAFF_POOL_ID
STAFF_USER_POOL_CLIENT_ID=$STAFF_CLIENT_ID
EOF

echo "✅ .env updated successfully"
echo ""
echo "📋 Configuration Summary:"
echo "========================="
echo "Customer Pool ID:     $CUSTOMER_POOL_ID"
echo "Customer Client ID:   $CUSTOMER_CLIENT_ID"
echo "Staff Pool ID:        $STAFF_POOL_ID"
echo "Staff Client ID:      $STAFF_CLIENT_ID"
echo ""
echo "🔄 Next Steps:"
echo "1. Restart Docker containers: docker-compose -f docker-compose.local.yml restart"
echo "2. Verify backend is using new Pool IDs: docker exec harborlist-marketplace-backend-1 env | grep USER_POOL"
echo ""
